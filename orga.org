- Vorhersage für Benzinpreise je Tankstelle
  - 1 Monat Vorausschau
  - gegebene Uhrzeit
  - Clustering
    - Autobahn?
    - Berufsverkehr?
    - Pampa?
- Tankstrategie
  - Fixed-Path-Gas-Station-Problem
  - leerer Tank an gegebener Tkst
  - pro Tkst auf Route:
    - berechne getankte Menge pro Tkst --> minimiere Kosten
- Deadline Impl: Ende Nov
- 2 Services: Vorhersage, Routing

* TODOS
** TODO Paper lesen
** TODO Data Exploration
* Database
- install postgresql
[[https://wiki.archlinux.org/index.php/PostgreSQL]]
#+begin_src sh
pacman -Syu postgresql
systemctl start postgresql
sudo -u postgres -i
initdb --locale $LANG -E UTF8 -D '/var/lib/postgres/data'
#+end_src
- create db
#+begin_src sh
sudo -u postgres -i
createdb infocup
#+end_src
- connect to db and create tables
#+begin_src sh
pgcli -d infocup
#+end_src
#+begin_src sql
create table stations (
  id integer primary key,
  station_name varchar(255),
  brand varchar(255),
  street varchar(255),
  house_number varchar(255),
  zip_code varchar(5),
  city varchar(255),
  lat float,
  lon float);
create table prices (
  id serial primary key,
  time_stamp timestamp,
  price integer,
  station_id integer references stations);
#+end_src
- import data
#+begin_src sh
python database.py
#+end_src
** Autobahn
- download germany-latest.osm.pbf von [[http://download.geofabrik.de/europe/germany.html]] hier verwendet: Stand 18.10.2017 14:14
- mv =germany-latest.osm.pbf= nach =WeitereDaten=
- install osmfilter, osmconvert und osmosis
#+begin_src sh
pacaur -S osmfilter osmconvert osmosis
#+end_src
- convert pbf nach o5m für schnellere bearbeitung
#+begin_src sh
osmconvert germany-latest.osm.pbf -o=germany.o5m
#+end_src
- filter autobahn
#+begin_src sh
osmfilter germany.o5m --keep= --keep-relations="network=BAB" > autobahn.osm
#+end_src
- install postgis extension, create schema
#+begin_src sh
pacman -Syu postgis
pgcli -d infocup
#+end_src
#+begin_src sql
create extension postgis;
create extension hstore;
#+end_src
#+begin_src sh
psql -d infocup -f /usr/share/osmosis/script/pgsnapshot_schema_0.6.sql
psql -d infocup -f /usr/share/osmosis/script/pgsnapshot_schema_0.6_linestring.sql 
#+end_src
- read o5m, write postgis
#+begin_src sh
osmosis --truncate-pgsql database=infocup
osmosis --read-xml autobahn.osm --log-progress --write-pgsql database=infocup
#+end_src
- add ref col to ways for better grouping
#+begin_src sql
alter table ways add ref varchar(255);
update ways set ref = tags -> 'ref';
#+end_src

*** Notes
- The data in Open Street Map database is stored in a gcs with units decimal degrees & datum of wgs84. (EPSG: 4326)
- The Open Street Map tiles and the WMS webservice, are in the projected coordinate system that is based on the wgs84 datum. (EPSG 3857)
- table relations enthält die relationen wie zb A 81
  - table relations_members mapt ways und nodes auf relations (bei Autobahnen nur ways)
  - ways haben eine linestring column mit der die geometrie angezeigt werden kann [[http://arthur-e.github.io/Wicket/sandbox-gmaps3.html]]
